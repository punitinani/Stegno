/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stegno;

import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javafx.scene.image.ImageView;
import javax.imageio.ImageIO;

/**
 *
 * @author p_unit
 */
public class Scratch extends javax.swing.JFrame {

    
    
    ImageIcon orIcon;
    String nameOfFile;
    File file;
    static int length = 12;

    ImageView iv;

    String enteredmessage;

    int oheight, owidth;
    JFileChooser chooser;

    /**
     * Creates new form Scratch
     */
    public Scratch() {

        initComponents();
        this.setLocation(500, 250);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new java.awt.Panel();
        Browse = new javax.swing.JButton();
        path = new javax.swing.JTextField();
        message = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        oriimage = new javax.swing.JLabel();
        dec = new javax.swing.JButton();
        enc = new javax.swing.JButton();

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("S_magic Tool ");
        setMinimumSize(new java.awt.Dimension(400, 300));
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        Browse.setText("Browse");
        Browse.setName(""); // NOI18N
        Browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrowseActionPerformed(evt);
            }
        });

        path.setEnabled(false);
        path.setFocusable(false);
        path.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathActionPerformed(evt);
            }
        });

        message.setToolTipText("Enter the message");
        message.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Message");

        dec.setText("Decrypt");
        dec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decActionPerformed(evt);
            }
        });

        enc.setText("Encrypt");
        enc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 33, Short.MAX_VALUE)
                .addComponent(oriimage, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enc)
                    .addComponent(dec))
                .addGap(28, 28, 28))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(path, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Browse)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(oriimage, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(enc)
                        .addGap(42, 42, 42)
                        .addComponent(dec)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Browse))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrowseActionPerformed

        chooser = new JFileChooser();

        chooser.showOpenDialog(this);

        nameOfFile = chooser.getSelectedFile().getAbsolutePath();

        file = new File(nameOfFile);
        System.out.println(nameOfFile);
        orIcon = new ImageIcon(nameOfFile);

        oheight = orIcon.getImage().getHeight(chooser);

        owidth = orIcon.getImage().getWidth(chooser);
        oriimage.setIcon(orIcon);

        oriimage.setVisible(true);

        path.setText(nameOfFile);


    }//GEN-LAST:event_BrowseActionPerformed

    private void pathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pathActionPerformed

    private void messageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_messageActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:

        //  JOptionPane.showMessageDialog(rootPane, "Bye Bye !!");
        System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    private void encActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encActionPerformed
        // TODO add your handling code here:

        enteredmessage = message.getText();
        //  System.out.print(enteredmessage);
//
//        passcode pass = new passcode();
//        pass.setLocation(522,319);
//        pass.setVisible(true);
//        try {
//            password = JOptionPane.showInputDialog("Enter the password");
//        } catch (Exception e) {
//            password = JOptionPane.showInputDialog("Enter the password");
//        }
        length = message.getText().length();
        char getToChars[] = message.getText().toCharArray();

        System.out.println(getToChars.length);

        // System.out.println("length " + length);
        for (int i = 0; i < length; i++) {

            System.out.println((int) getToChars[i] + " " + getToChars[i]);

        }

        Image image = null;
        try {
            image = ImageIO.read(file);
            int height;

            height = image.getHeight(this);
            int width = image.getWidth(this);

            BufferedImage data = ImageIO.read(file);
            BufferedImage data1= ImageIO.read(file);
            java.awt.Color c;
            //   c = new Color(data.getRGB(0, 0));

            int i = 0;
            int j = 0;

            File writer = new File("write.png");

            FileOutputStream fos = new FileOutputStream(writer);

         //   Image get = null;
            int a = 0;
            c = new Color(data.getRGB(i, j));

            // data.setRGB(i, j, (c.getRed() + c.getGreen() + (char) getToChars[a]));
            for (i = 0; i < width; i++) {
                for (j = 0; j < height; j++) {

                     c = new Color(data.getRGB(i, j));
                    //   if (i < 1 && j < 10) {
                    data1.setRGB(i, j, /*(c.getRed() + c.getGreen() + (char) getToChars[a])*/ c.getRGB());
                 //   a++;
                    
                    System.out.println(c.getRGB());

                  //  System.out.println("inserted at " + "  i" + i + " j " + j + "   " + (char) getToChars[a]);

                    
                   // }

//                    } else if ((i == width - 3) && (j == height)) {
//                        c = new Color(data.getRGB(i, j));
//
//                        data.setRGB(i, j, (int) c.getRed() + (int) c.getGreen() + length);
//                        // data.setRGB(i, j, c.hashCode());
//                        ImageIO.write(data, "jpg", fos);
//
//                        // System.out.println(c.getBlue());
//                        System.out.println("length is inserted");
//                    } else {
                    //  data.setRGB(i, j, c.getRGB());
                    //ImageIO.write(data, "jpg", fos);
                }
//

                
            }
            ImageIO.write(data1, "png", fos);

            fos.close();

            JOptionPane.showMessageDialog(rootPane, "Done !!");
        } catch (Exception ex) {

            Logger.getLogger(Scratch.class.getName()).log(Level.SEVERE, null, ex);
            //  JOptionPane.showMessageDialog(rootPane, "Please Select the file" + ex.getMessage() + " " + ex);

        }


    }//GEN-LAST:event_encActionPerformed

    private void decActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decActionPerformed

        try {

            Image decImage = null;

            file = new File(chooser.getSelectedFile().getAbsolutePath());

            try {
                decImage = ImageIO.read(file);
            } catch (IOException ex) {
                Logger.getLogger(Scratch.class.getName()).log(Level.SEVERE, null, ex);
            }

            System.out.println(file.exists());

            BufferedImage dataBack = ImageIO.read(file);
            int w = dataBack.getWidth();
            int h = dataBack.getHeight();
            java.awt.Color c;
          //  c = new Color(dataBack.getRGB((w - 2), (h - 2)));

            //  System.out.println(c.getBlue());
            int i = 0, j = 0;
            String msgBack = message.getText() + " ";
            int r, g, b;
            c = new Color(dataBack.getRGB(i, j));
            for (i = 0; i < w; i++) {
                for (j = 0; j < h; j++) {
                    c = new Color(dataBack.getRGB(i, j));

//                    if (i < 1 && j < message.getText().length()) {
                    // c = new Color(dataBack.getRGB(i, j));
                    System.out.println(" at i " + i + "  and  j  " + j + " " + "  " + (int) c.getBlue());

                    msgBack = msgBack + ((char) c.getBlue());

//                    }
                }

            }
            message.setText(msgBack);

        } catch (IOException ex) {
            Logger.getLogger(Scratch.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_decActionPerformed

    public static void main(String args[]) {
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Scratch.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Scratch.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Scratch.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Scratch.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Scratch().setVisible(true);

            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Browse;
    private javax.swing.JButton dec;
    private javax.swing.JButton enc;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField message;
    private javax.swing.JLabel oriimage;
    private java.awt.Panel panel1;
    private javax.swing.JTextField path;
    // End of variables declaration//GEN-END:variables
}
